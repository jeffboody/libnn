#version 450

layout (local_size_x=1, local_size_y=8, local_size_z=8) in;

struct nn_dim_t
{
	uint count;
	uint height;
	uint width;
	uint depth;
};

layout(std430, set=0, binding=0) readonly buffer sb000
{
	float param_skip_beta;
};

layout(std430, set=1, binding=2) readonly buffer sb102
{
	nn_dim_t dim_dL_dX1;
};

layout(std430, set=1, binding=3) writeonly buffer sb103
{
	float dL_dX1[];
};

layout(std430, set=1, binding=6) readonly buffer sb106
{
	nn_dim_t dim_dL_dY1;
};

layout(std430, set=1, binding=7) readonly buffer sb107
{
	float dL_dY1[];
};

float get_dL_dY1(uint n, uint i, uint j, uint k)
{
	uint sn = dim_dL_dY1.height*dim_dL_dY1.width*dim_dL_dY1.depth;
	uint sy = dim_dL_dY1.width*dim_dL_dY1.depth;
	uint sx = dim_dL_dY1.depth;
	return dL_dY1[n*sn + i*sy + j*sx + k];
}

void set_dL_dX1(uint n, uint i, uint j, uint k, float v)
{
	uint sn = dim_dL_dX1.height*dim_dL_dX1.width*dim_dL_dX1.depth;
	uint sy = dim_dL_dX1.width*dim_dL_dX1.depth;
	uint sx = dim_dL_dX1.depth;
	dL_dX1[n*sn + i*sy + j*sx + k] = v;
}

void main()
{
	// dispatch(RAW, bs, xh, xw, 1, 8, 8)
	uint m  = gl_GlobalInvocationID.x;
	uint i  = gl_GlobalInvocationID.y;
	uint j  = gl_GlobalInvocationID.z;
	uint xh = dim_dL_dX1.height;
	uint xw = dim_dL_dX1.width;
	uint xd = dim_dL_dX1.depth;

	if((i >= xh) || (j >= xw))
	{
		return;
	}

	uint  k;
	float dl_dy1;
	float dy_dx1 = param_skip_beta;
	for(k = 0; k < xd; ++k)
	{
		dl_dy1 = get_dL_dY1(m, i, j, k);
		set_dL_dX1(m, i, j, k, dl_dy1*dy_dx1);
	}
}
